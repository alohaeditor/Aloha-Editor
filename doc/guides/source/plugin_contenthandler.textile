h2. The Content Handler Plugin

The Contenthandler Plugin has no user interface and is used for example in conjunction with the paste plugin to be able to handle pasted content from Microsoft Word and the like. Currently it provides three so called "Content Handlers" which will be used to cleanup html content on various occasions like pasting or when initializing an editable.

endprologue.

h3. Available Content Handlers

The available contenthandlers are:

* word
* generic
* sanitize
* oEmbed

Plugins also provide Content Handler:

* Block @common/block@ plugin

h3. Configuration

There are two hooks available:

* insertHtml in @common/commands@ plugin
* initEditable in core/editable.js

<javascript>
	Aloha.settings.contentHandler: {
        // The following content handlers will be called when HTML is inserted into an editable (pasted, for example).
		insertHtml: [ 'word', 'generic', 'oembed', 'sanitize' ],
        // The following content handlers will be called when the editable is initialized (editable.aloha()).
		initEditable: [ 'sanitize' ],
		sanitize: 'relaxed' // relaxed, restricted, basic,
		allows: {
			elements: [
				'strong', 'em', 'i', 'b', 'blockquote', 'br', 'cite', 'code', 'dd', 'div', 'dl', 'dt', 'em',
				'i', 'li', 'ol', 'p', 'pre', 'q', 'small', 'strike', 'sub',
				'sup', 'u', 'ul'],

			attributes: {
				'a'         : ['href'],
				'blockquote': ['cite'],
				'q'         : ['cite']
			 },

			protocols: {
				'a'         : {'href': ['ftp', 'http', 'https', 'mailto', '__relative__']}, // Sanitize.RELATIVE
				'blockquote': {'cite': ['http', 'https', '__relative__']},
				'q'         : {'cite': ['http', 'https', '__relative__']}
			}
		}
	}
</javascript>

h3. Word Content Handler

The Word Content Handler will detect content pasted from Microsoft Word 2003 and newer versions. It transforms and cleans the pasted html code so that deteriorating effects on mental health by staring at bogus and totally fubar html code can be kept to an acceptable minimum. Therefore it will

* remove all "mso-whatever" classes
* remove all divs from the pasted content
* remove font tags
* convert bullet points to real html lists with proper nesting
* transform titles to h1 and subtitles to h2 tags

h3. Generic Content Handler

The Generic Content Handler is a bit less generic than his name might suggest as he will apply the following cleaning actions:

* clean lists by removing any non-ul or li children
* cleaning tables by removing the following attributes
** border
** cellpadding
** cellspacing
** width
** height
** valign
* remove comments
* unwrap font and span tags
* remove styles
* remove namespaced elements
* transform formattings by turning
** @<strong>@ tags into @<b>@ tags
** @<em>@ to @<i>@
** @<s>@ to @<del>@
** and by removing @<u>@ tags (as underline text decoration should solely be used for links)

h3. Sanitize Content Handler

The Sanitize Content Handler will remove all dom elements and attributes not covered by it's configuration. You may specify your own configuration based on these default settings:

<javascript>
Aloha.settings.contentHandler.sanitize = {
	// elements allowed in the content
	elements: [
		'a', 'abbr', 'b', 'blockquote', 'br', 'cite', 'code', 'dd', 'dl', 'dt', 'em',
		'i', 'li', 'ol', 'p', 'pre', 'q', 'small', 'strike', 'strong', 'sub',
		'sup', 'u', 'ul' ],
	// attributes allowed for specific elements
	attributes: {
		'a' : ['href'],
		'blockquote' : ['cite'],
		'q' : ['cite'],
		'abbr': ['title']
	},
	// protocols allowed for certain attributes of elements
	protocols: {
		'a' : {'href': ['ftp', 'http', 'https', 'mailto', '__relative__']},
		'blockquote' : {'cite': ['http', 'https', '__relative__']},
		'q' : {'cite': ['http', 'https', '__relative__']}
	}
}
</javascript>

For the sanitize Content Handler you can use a predefined set of allowed HTML-tags and attributes ("sanitize" option) or your own set defined as "allows" option.
The configuration option for "insertHtml" and "initEditable" defines which Content Handler should be used at that hook points.
"initEditable" uses the "sanitize" Content Handler by default.
"insertHtml" uses all registered Content Handler by default (including the Content Handler from other Plugins)

WARNING: The order how the handlers are loaded and executed is important. If you first load the "sanitize" or "generic" handler the "word" handler will not be able to detect a MS Word document.

h3. APIs and Extension Points

There is the Content Handler Manager in Aloha Core available where Content Handler can register themself.

h3. Writing your own Content Handler

All Content Handler needs to support the "handleContent" method and will receive and return the content as HTML text.

<javascript>
	define(
	['aloha', 'aloha/jquery', 'aloha/contenthandlermanager'],
	function(Aloha, jQuery, ContentHandlerManager) {
		"use strict";
	
		var MyContentHandler = ContentHandlerManager.createHandler({
			handleContent: function( content ) {
				
				// do something with the content
				
				return content; // return as HTML text not jQuery/DOM object
			}
		});

		return MyContentHandler;
	});
</javascript>

