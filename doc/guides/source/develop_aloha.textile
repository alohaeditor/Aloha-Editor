h2. Using Aloha Editor

endprologue.

h3. Clone from Github

Fork it on github "Github repository":http://github.com/alohaeditor/Aloha-Editor, then:

<shell>
git clone git@github.com:YOURNAME/Aloha-Editor.git alohaeditor
cd alohaeditor
git checkout dev
</shell>

h3. Repository Directory Structure

* /
* /bin - build scripts
* /build - build configuration

* /doc
* /doc/api - the API documentation
* /doc/guides

* /vendor - third party libraries (e.g. jquery)
* /target - build output folder

* /src
* /src/css - Aloha core css files
* /src/demo - Aloha demos
* /src/img - Aloha core images

* /src/lib - Require plugins and bootstrap files
* /src/lib/aloha - Main Aloha Editor core sources
* /src/lib/vendor - third party libraries jquery
* /src/lib/util - utility libraries (e.g. json2.js, class.js)

* /src/plugins
* /src/plugins/common - Common plugin bundle
* /src/plugins/extra - Extra plugin bundle

* /src/test - QUnit tests


h3. Building  - Aloha Building

h4. Debian Linux / Mac OS X

* Install nodejs
See: http://nodejs.org

* Install npm
See: http://npmjs.org
<shell>
curl http://npmjs.org/install.sh | sh
</shell>


* Invoke Building:
<shell>
cd alohaeditor
mvn3 clean package
</shell>

You probably want to ommit building of the api and guides:
<shell>
mvn3 clean package -DbareMode=true
</shell>

You can also build just the css:
<shell>
mvn3 generate-sources
</shell>

The resulting css should be in src/css/aloha.css

h4. Other OS: 
* Microsoft Windows: Not yet supported

h4. Customized builds:

Aloha-Editor uses maven to build a distributable package (includes
documentation etc.). To build just the javascript, it suffices to invoke
"r.js":https://github.com/jrburke/r.js/ from the command line. For example

<shell>
node build/r.js -o build/aloha/build.js
</shell>

To customize the build to your needs, you can modify the build profile
in build/aloha/build.js. The most likely customization you want to make
is to remove or add plugins from the include property of the 'aloha'
module definition.

To include i18n files in your build, define the locale property. If the
locale property is not defined, the appropriate i18n files will be
loaded dynamically by requirejs. Remember to configure Aloha.locale
as well.

Unless you ask for plugins to be loaded that are not defined in the
build profile, or use a locale that was not defined during building, no
additional files should be downloaded by requirejs. In the future
requirejs may be replaced with an AMD stub such that requirejs is not
necessary for production deployments.

Css building can be customized by adding or removing entries in
src/css/aloha.less. If you removed or added plugins in the r.js build
profile, you also want to add or remove the appropriate css in the
aloha-core.less. Then, run

<shell>
mvn3 generate-sources
</shell>

And the resulting css should be in src/css/aloha.css

If you want to redefine modules in the build profile, for example if you
want to use your own jqueryui, please first read "Custom jQuery,
jQueryUI and other modules":using_aloha.html

h3. Guide 

* "Textile manual":http://redcloth.org/hobix.com/textile/

h4. Installation

h5. Debian Linux

<shell>
apt-get install build-essential
apt-get install ruby1.9.1-full
cd /usr/bin
ln -s ruby1.9.1  ruby
ln -s gem1.9.1  gem
gem install guides
ln -s /var/lib/gems/1.9.1/gems/guides-0.7.1/bin/guides /usr/bin/guides
guides preview 
</shell>

h5. Mac OSX

<shell>
gem install guides
</shell>

h5. Microsoft Windows

* "Download Guides.exe":http://guides-pkg.strobeapp.com/Guides.exe

h4. Using the Guides

* Preview Guides:
<shell>
cd alohaeditor/doc/guides
guides preview
</shell>

Preview URL: http://localhost:9292/

* Building Guides:
<shell>
guides build
</shell>
