h2. Using Aloha Editor

After reading this guide, you will be able to:

* Embed Aloha Editor in your web application.
* Load plugins to enrich your editing experience.
* Configure Aloha Editor to make your content editable and persist changes.
* Customize the editor in different contexts.

endprologue.

h3. Install Aloha

Let's begin by installing the Aloha Editor library. There are two ways to choose right now.

INFO: Actually you don’t "install" Aloha Editor, since it is neither a standalone CMS nor an HTML editor to create
websites. It is a JavaScript Library which has to be embedded and integrated in your web application.
Use it like a supersonic textarea. You can edit any DOM element with this supersonic textarea,
but you need to care about configuration and storage.

h4. Clone from Github

First of all you have to get your copy of the Aloha Editor. Just clone our "Github repository":http://github.com/alohaeditor/Aloha-Editor:

<shell>
git clone git://github.com/alohaeditor/Aloha-Editor.git
git checkout dev-blocks
git submodule init
git submodule update
cd Aloha-Editor/src/plugins/common
git submodule init
git submodule update
</shell>

NOTE: Once we release version 0.10 you will be able to download a nice Aloha package with everything bundled for
production without the hassles of Git submodules.

You can skip everything but the @src@ directory. Copy it to a convenient location of your web application:

<shell>
mkdir path_to_your_webapp/javascripts/aloha
cp -r src path_to_your_webapp/javascripts/aloha
</shell>

h3. Embed Aloha

Let's assume that you have installed Aloha to your webapplication in a path like +javascripts/aloha+.

Put the following in the *head* of your web application to load Aloha with a basic formatting plugin:

<html>
<head>
	<script src="javascripts/aloha/require.js"
			data-main="javascripts/aloha/aloha.js"
			id="aloha-script-include"
			data-plugins="common/format">
	</script>
	<link rel="stylesheet" href="javascripts/aloha/aloha.css" type="text/css">
</head>
</html>

Aloha Editor uses RequireJS for the heavy lifting of JavaScript dependencies, the script in @data-main@ is the main
Aloha module that loads everything else for you.

INFO: We will cover just enough about RequireJS to get you started here. To learn more about how RequireJS works,
read our "Writing Plugins":writing_plugins.html guide.

In the script tag attribute +data-plugins="common/format"+ we tell Aloha which plugins should be loaded. We come
to this later, but note that the mere inclusion does not yet change the behaviour of your web page.

h3. Create editables

An editable is an HTML element that should be editable by Aloha. Aloha includes a jQuery plugin
to create the editables through selectors. Once Aloha is loaded by RequireJS, we can call +.aloha()+ on the
matched elements. The @require@ function takes care that Aloha is actually loaded, so you can put this code anywhere
after the inclusion of @require.js@.

<html>
<script type="text/javascript">
	require(['aloha'], function() {
		// Make #content editable
		$('#content').aloha();
	});
</script>
</html>

Et voilà! You should now see the floating menu of Aloha when you click into your content.

Since the @.aloha()@ plugin can be called on any jQuery set, you could create many editables at once by specifying a
CSS class or any other jQuery selector.

<javascript>
// Make all elements with class="content" editable
$('.content').aloha();
</javascript>

h3. Using plugins

WARNING: still write this

* Loading plugins
* Configuring plugins

h3. Installing additional plugins

* Plugin Bundles explained

WARNING: still write this

h3. jQuery and JavaScript framework compatibility

WARNING: still write this

h3. Changelog

* July 3, 2011: Initial version by "Sebastian Kurfürst":credits.html#skurfuerst and "Christopher Hlubek":credits.html#hlubek
